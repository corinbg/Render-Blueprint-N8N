# render.yaml â€” n8n on Render (Starter) + Supabase Postgres (external)

services:
  - type: web
    name: n8n
    plan: starter                    # web sempre ON; i webhook restano affidabili
    runtime: image
    image:
      # Pin di versione consigliato per evitare sorprese agli upgrade:
      # (puoi usare "latest", ma meglio fissare un tag stabile)
      url: docker.io/n8nio/n8n:1.83.2
    healthCheckPath: /healthz        # best practice: Render monitora e riavvia se serve
    envVars:
      # ---- DB: Supabase Postgres ----
      - key: DB_TYPE
        value: postgresdb
      - key: DB_POSTGRESDB_HOST
        value: aws-1-eu-central-1.pooler.supabase.com
      - key: DB_POSTGRESDB_PORT
        value: "5432"
      - key: DB_POSTGRESDB_DATABASE
        value: postgres
      - key: DB_POSTGRESDB_USER
        value: postgres.pbytlchtreotzqgidoio
      - key: DB_POSTGRESDB_PASSWORD
        value: '%NdkrU$c+bk8VpP'
      - key: DB_POSTGRESDB_SSL
        value: "true"

      # (Opzionale) se vuoi tenere i dati di n8n in uno schema dedicato:
      # - key: DB_POSTGRESDB_SCHEMA
      #   value: n8n

      # ---- Sicurezza & URL ----
      - key: N8N_ENCRYPTION_KEY
        value: 86145eb6aa37f13e89a89a4fe84404a58fa85258e9773ed77cddbc1eb02f6dcb   # non cambiarla mai
      - key: N8N_PROTOCOL
        value: https
      # Imposta dopo il primo deploy con l'URL reale del servizio:
      - key: WEBHOOK_URL
        value: https://<tuo-servizio>.onrender.com/

      # (Opzionali utili)
      # - key: GENERIC_TIMEZONE
      #   value: Europe/Rome
      # - key: TZ
      #   value: Europe/Rome
